/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * These .proto interfaces are private and unstable.
 * Please see http://wiki.apache.org/hadoop/Compatibility
 * for what changes are allowed for an *unstable* .proto interface.
 */

// This file contains protocol buffers that are used to reconfigure OM and SCM
// by ozone admin.

syntax="proto2";
option java_package = "org.apache.hadoop.hdds.protocol.proto";
option java_outer_classname = "ReconfigProtocolProtos";
option java_generic_services = true;
option java_generate_equals_and_hash = true;
package hadoop.hdds;

/** Asks OM/SCM to reload configuration file. */
message StartReconfigRequestProto {
}

message StartReconfigResponseProto {
}

/** Query the running status of reconfiguration process */
message GetReconfigStatusRequestProto {
}

message GetConfigurationChangeProto {
  required string name = 1;
  required string oldValue = 2;
  optional string newValue = 3;
  optional string errorMessage = 4;  // It is empty if success.
}

message GetReconfigStatusResponseProto {
  required int64 startTime = 1;
  optional int64 endTime = 2;
  repeated GetConfigurationChangeProto changes = 3;
}

/** Query the reconfigurable properties on OM/SCM. */
message ListReconfigPropertiesRequestProto {
}

message ListReconfigPropertiesResponseProto {
  repeated string name = 1;
}

/**
 * Protocol used from client to the OM.
 * See the request and response for details of rpc call.
 */
service ReconfigProtocolService {
  rpc getReconfigStatus(GetReconfigStatusRequestProto)
      returns(GetReconfigStatusResponseProto);

  rpc startReconfig(StartReconfigRequestProto)
      returns(StartReconfigResponseProto);

  rpc listReconfigProperties(ListReconfigPropertiesRequestProto)
      returns(ListReconfigPropertiesResponseProto);
}