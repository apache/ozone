#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with this
# work for additional information regarding copyright ownership.  The ASF
# licenses this file to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# <p>
# http://www.apache.org/licenses/LICENSE-2.0
# <p>
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.
#
name=PropertiesConfig

# Checks for config change periodically and reloads
monitorInterval=30

filter=read,write
# filter.read.onMatch=DENY avoids logging all READ events
# filter.read.onMatch=ACCEPT permits logging all READ events
# The above two settings ignore the log levels in configuration
# filter.read.onMatch=NEUTRAL permits logging of only those READ events
# which are attempted at log level equal or greater than log level specified
# in the configuration
filter.read.type=MarkerFilter
filter.read.marker=READ
filter.read.onMatch=NEUTRAL
filter.read.onMismatch=NEUTRAL

# filter.write.onMatch=DENY avoids logging all WRITE events
# filter.write.onMatch=ACCEPT permits logging all WRITE events
# The above two settings ignore the log levels in configuration
# filter.write.onMatch=NEUTRAL permits logging of only those WRITE events
# which are attempted at log level equal or greater than log level specified
# in the configuration
filter.write.type=MarkerFilter
filter.write.marker=WRITE
filter.write.onMatch=NEUTRAL
filter.write.onMismatch=NEUTRAL

# Log Levels are organized from most specific to least:
# OFF (most specific, no logging)
# FATAL (most specific, little data)
# ERROR
# WARN
# INFO
# DEBUG
# TRACE (least specific, a lot of data)
# ALL (least specific, all data)

# Uncomment following section to enable logging to console appender also
#appenders=console, rolling
#appender.console.type=Console
#appender.console.name=STDOUT
#appender.console.layout.type=PatternLayout
#appender.console.layout.pattern=%d{DEFAULT} | %-5level | %c{1} | %msg | %throwable{3} %n

# Comment this line when using both console and rolling appenders
appenders=bgdelrolling

# Rolling File Appender with size & time thresholds.
# Rolling is triggered when either threshold is breached.
# The rolled over file is compressed by default
# Time interval is specified in seconds 86400s=1 day
# Audit files under the base directory that are 30 days old
# or older are deleted at rollover time
appender.bgdelrolling.type=RollingFile
appender.bgdelrolling.name=BgDeletionRollingFile
appender.bgdelrolling.fileName =${sys:hadoop.log.dir}/bgdeletion-audit-${hostName}.log
appender.bgdelrolling.filePattern=${sys:hadoop.log.dir}/bgdeletion-audit-${hostName}-%d{yyyy-MM-dd-HH-mm-ss}-%i.log.gz
appender.bgdelrolling.layout.type=PatternLayout
appender.bgdelrolling.layout.pattern=%d{DEFAULT} | %-5level | %c{1} | %msg | %throwable{3} %n
appender.bgdelrolling.policies.type=Policies
appender.bgdelrolling.policies.time.type=TimeBasedTriggeringPolicy
appender.bgdelrolling.policies.time.interval=86400
appender.bgdelrolling.policies.size.type=SizeBasedTriggeringPolicy
appender.bgdelrolling.policies.size.size=64MB
appender.bgdelrolling.strategy.type=DefaultRolloverStrategy
appender.bgdelrolling.strategy.delete.type=Delete
appender.bgdelrolling.strategy.delete.basePath=${sys:hadoop.log.dir}
appender.bgdelrolling.strategy.delete.maxDepth=1
appender.bgdelrolling.strategy.delete.ifFileName.type=IfFileName
appender.bgdelrolling.strategy.delete.ifFileName.glob=bgdeletion-audit-*.log.gz
appender.bgdelrolling.strategy.delete.ifLastModified.type=IfLastModified
appender.bgdelrolling.strategy.delete.ifLastModified.age=30d

loggers=bgdelaudit
logger.bgdelaudit.type=AsyncLogger
logger.bgdelaudit.name=BackgroundDeletionAudit
logger.bgdelaudit.level=INFO
logger.bgdelaudit.appenderRefs=bgdelrolling
logger.bgdelaudit.appenderRef.file.ref=BgDeletionRollingFile

rootLogger.level=INFO
#rootLogger.appenderRefs=stdout
#rootLogger.appenderRef.stdout.ref=STDOUT
