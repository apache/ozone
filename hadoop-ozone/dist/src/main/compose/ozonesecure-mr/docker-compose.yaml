# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: "3.5"
services:
  kdc:
    image: ${OZONE_TESTKRB5_IMAGE}
    hostname: kdc
    networks:
      - ozone
    volumes:
      - ../..:/opt/hadoop
      - ../_keytabs:/etc/security/keytabs
    command: ["krb5kdc","-n"]
  kms:
    image: ${HADOOP_IMAGE}:${HADOOP_VERSION}
    networks:
      - ozone
    ports:
      - 9600:9600
    env_file:
      - ./docker-config
    volumes:
      - ./krb5.conf:/etc/krb5.conf
      - ../../libexec/transformation.py:/opt/transformation.py
    command: ["hadoop", "kms"]
  datanode:
    image: apache/ozone-runner:${OZONE_RUNNER_VERSION}
    networks:
      - ozone
    volumes:
      - ../..:/opt/hadoop
      - ../_keytabs:/etc/security/keytabs
      - ./krb5.conf:/etc/krb5.conf
    ports:
      - 9864
    command: ["/opt/hadoop/bin/ozone","datanode"]
    env_file:
      - docker-config
    environment:
      OZONE_OPTS:
  om:
    image: apache/ozone-runner:${OZONE_RUNNER_VERSION}
    hostname: om
    networks:
      - ozone
    volumes:
      - ../..:/opt/hadoop
      - ../_keytabs:/etc/security/keytabs
      - ./krb5.conf:/etc/krb5.conf
    ports:
      - 9874:9874
      - 9862:9862
    environment:
      ENSURE_OM_INITIALIZED: /data/metadata/om/current/VERSION
      OZONE_OPTS:
    env_file:
      - docker-config
    command: ["/opt/hadoop/bin/ozone","om"]
  s3g:
    image: apache/ozone-runner:${OZONE_RUNNER_VERSION}
    hostname: s3g
    networks:
      - ozone
    volumes:
      - ../..:/opt/hadoop
      - ../_keytabs:/etc/security/keytabs
      - ./krb5.conf:/etc/krb5.conf
    ports:
      - 9878:9878
    env_file:
      - ./docker-config
    environment:
      OZONE_OPTS:
    command: ["/opt/hadoop/bin/ozone","s3g"]
  scm:
    image: apache/ozone-runner:${OZONE_RUNNER_VERSION}
    hostname: scm
    networks:
      - ozone
    volumes:
      - ../..:/opt/hadoop
      - ../_keytabs:/etc/security/keytabs
      - ./krb5.conf:/etc/krb5.conf
    ports:
      - 9876:9876
      - 9860:9860
    env_file:
      - docker-config
    environment:
      ENSURE_SCM_INITIALIZED: /data/metadata/scm/current/VERSION
      OZONE-SITE.XML_hdds.scm.safemode.min.datanode: "${OZONE_SAFEMODE_MIN_DATANODES:-1}"
      OZONE_OPTS:
    command: ["/opt/hadoop/bin/ozone","scm"]
  rm:
    image: ${HADOOP_IMAGE}:${HADOOP_VERSION}
    hostname: rm
    networks:
      - ozone
    volumes:
      - ../..:/opt/ozone
      - ../_keytabs:/etc/security/keytabs
      - ./krb5.conf:/etc/krb5.conf
      - ../../libexec/transformation.py:/opt/transformation.py
    ports:
      - 8088:8088
    env_file:
      - ./docker-config
    command: ["yarn", "resourcemanager"]
  nm:
    image: ${HADOOP_IMAGE}:${HADOOP_VERSION}
    hostname: nm
    networks:
      - ozone
    volumes:
      - ../..:/opt/ozone
      - ../_keytabs:/etc/security/keytabs
      - ./krb5.conf:/etc/krb5.conf
      - ../../libexec/transformation.py:/opt/transformation.py
    env_file:
      - ./docker-config
    environment:
      WAITFOR: rm:8088
    command: ["yarn","nodemanager"]
  jhs:
    image: ${HADOOP_IMAGE}:${HADOOP_VERSION}
    container_name: jhs
    hostname: jhs
    networks:
      - ozone
    volumes:
      - ../..:/opt/ozone
      - ../_keytabs:/etc/security/keytabs
      - ./krb5.conf:/etc/krb5.conf
      - ../../libexec/transformation.py:/opt/transformation.py
    ports:
      - 8188:8188
    env_file:
      - ./docker-config
    environment:
      WAITFOR: rm:8088
    command: ["yarn","timelineserver"]
networks:
  ozone:
    name: ozone
